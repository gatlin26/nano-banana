'use client'

import { motion } from 'framer-motion'
import { Card, CardContent } from '@/components/ui/card'
import { useState } from 'react'

export default function ShowcaseSection() {
  const [selectedImage, setSelectedImage] = useState<string | null>(null)
  
  // Gallery images from the public/gallery folder
  const galleryImages = [
    'nano-banana-new-image-model-examples-v0-0uypne6v8uif1.webp',
    'nano-banana-new-image-model-examples-v0-c8b9mo2b7uif1.webp',
    'nano-banana-new-image-model-examples-v0-df0pa95b8uif1.webp',
    'nano-banana-new-image-model-examples-v0-f6benr39auif1.webp',
    'nano-banana-new-image-model-examples-v0-gioq3ao79uif1.webp',
    'nano-banana-new-image-model-examples-v0-o7dv8xyx9uif1.webp',
    'nano-banana-new-image-model-examples-v0-ve4kg44rauif1.webp'
  ]

  return (
    <section id="showcase" className="py-20 bg-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl font-bold text-gray-900 mb-4">
            ðŸŽ¨ Showcase Gallery
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-4">
            Explore stunning examples of AI-generated images and experience the charm of advanced technology.
          </p>
          <div className="inline-flex items-center bg-gradient-to-r from-purple-100 to-blue-100 px-4 py-2 rounded-full">
            <span className="text-sm font-medium text-purple-700">
              âš¡ Powered by ThunderBeanage
            </span>
          </div>
        </motion.div>

        {/* Gallery Grid - Max 3 per row */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {galleryImages.map((imageName, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: index * 0.1 }}
              viewport={{ once: true }}
            >
              <Card className="overflow-hidden hover:shadow-xl transition-all duration-300 group cursor-pointer">
                <CardContent className="p-0">
                  <div className="relative">
                    <img
                      src={`/gallery/${imageName}`}
                      alt={`AI generated showcase image ${index + 1}`}
                      className="w-full aspect-square object-cover group-hover:scale-105 transition-transform duration-300"
                      onClick={() => setSelectedImage(`/gallery/${imageName}`)}
                    />
                    <div className="absolute inset-0 bg-black/0 group-hover:bg-black/20 transition-all duration-300 flex items-center justify-center">
                      <div className="opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                        <div className="bg-white/90 backdrop-blur-sm px-3 py-1 rounded-full">
                          <span className="text-sm font-medium text-gray-800">Click to view</span>
                        </div>
                      </div>
                    </div>

                  </div>
                </CardContent>
              </Card>
            </motion.div>
          ))}
        </div>

        {/* Credit Section */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.3 }}
          viewport={{ once: true }}
          className="text-center mt-12"
        >
          <p className="text-gray-500 text-sm">
            All images generated by ThunderBeanage AI model
          </p>
        </motion.div>
      </div>

      {/* Modal for full-size image view */}
      {selectedImage && (
        <div 
          className="fixed inset-0 bg-black/80 z-50 flex items-center justify-center p-4"
          onClick={() => setSelectedImage(null)}
        >
          <div className="relative max-w-4xl max-h-full">
            <img
              src={selectedImage}
              alt="Full size showcase image"
              className="max-w-full max-h-full object-contain rounded-lg"
            />
            <button
              onClick={() => setSelectedImage(null)}
              className="absolute top-4 right-4 bg-white/20 hover:bg-white/30 text-white rounded-full p-2 transition-colors"
            >
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>
      )}
    </section>
  )
}